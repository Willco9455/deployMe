{"version":3,"sources":["webpack:///src/app/Services/day.service.ts"],"names":["DayService","alertController","dayList","time","slice","search","indexOf","startTime","endTime","length","split","x","compStartTime","startAdd","endAdd","compStartAdd","replace","compEndAdd","startAdd2","endAddExisting","activName","StartTime","EndTime","adding","pos","findPos","splice","create","header","message","buttons","alert","present","item","index","findIndex","console","log","providedIn"],"mappings":"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","file":"add-modal-add-modal-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { DayItem, Action } from '../Pages/to-do/item.model';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DayService {\n\n  constructor(private alertController: AlertController) { }\n\n  dayList: DayItem[] = [\n    new DayItem('first test', '12:00', '13:00'),\n    new DayItem('trollolololoolololo', '13:23', '13:26'),\n    new DayItem('testing212', '15:00', '16:00')\n  ];\n\n\n  getDay() {// WORKS\n    return [...this.dayList];\n  }\n\n  // this converts the way ionic stores time(2020-06-02T16:00:47.314+01:00) to regular format used in findPos function\n  ionTimeConvert(time: string) {// WORKS\n    time = time.slice(time.search('T') + 1, time.indexOf(':', time.indexOf(':') + 1));\n    return time;\n  }\n\n  // function used to find the positon a new activity should go in based on its date, returns the position;\n  findPos(startTime: any, endTime: any) {// WORKS!!\n\n    // to check if the day is emty and if it is return 0 as positon\n    if (this.dayList.length === 0) {\n      return 0;\n    }\n\n    startTime = startTime.split(':'); // turns ionic time into array [HH,MM]\n    endTime = endTime.split(':'); // turns ionic time into array [HH,MM]\n\n    let x: number;\n    for (x = 0; x < this.dayList.length; x++) { // loops through the items currently in daylist array\n\n      const compStartTime = this.dayList[x].startTime.split(':');\n\n      if (compStartTime[0] === startTime[0]) {\n        if (compStartTime[1] === startTime[1]) {\n          // runs of the start time is the same as a activity that already exists\n          return 'error';\n        } else if (startTime[1] < compStartTime[1] ) {// elif to check if the activity can fit in the day\n          // runs when a slot is found\n\n          // sets varibale for the start time of the event you want to add eady for comparison\n          const startAdd = startTime[0] + startTime[1];\n          // sets varibale for the end time of the event you want to add eady for comparison\n          const endAdd = endTime[0] + endTime[1];\n          // sets varibale for the start time of the event in front of where you want to insert the new event\n          const compStartAdd = (this.dayList[x].startTime).replace(':', '');\n\n          // this if statment checks if times overlap for activities going into slot 0\n          if (x === 0) {\n            if (endAdd <= compStartAdd ) {\n              return x;\n            } else {\n              return 'error';\n            }\n          }\n\n          // sets varibale for the end time of the event in front of where you want to insert the new event\n          const compEndAdd = (this.dayList[x - 1].endTime).replace(':', '');\n\n          // this checks if the actiity you want to add overlaps with current activities for other slots\n          if (startAdd >= compEndAdd && endAdd <= compStartAdd) {\n            return x;\n          }\n          return 'error';\n          }\n      } else if (startTime[0] < compStartTime[0]) {\n        // runs when a slot has been found\n\n        // this section is the exact same as the previous both of them check if the new item's times-\n        // overlap with the already established activites in the list\n\n        // sets varibale for the start time of the event you want to add eady for comparison\n        const startAdd = startTime[0] + startTime[1];\n        // sets varibale for the end time of the event you want to add eady for comparison\n        const endAdd = endTime[0] + endTime[1];\n        // sets varibale for the start time of the event in front of where you want to insert the new event\n        const compStartAdd = (this.dayList[x].startTime).replace(':', '');\n\n        // this if statment checks if times overlap for activities going into slot 0\n        if (x === 0) {\n          if (endAdd <= compStartAdd ) {\n            return x;\n          } else {\n            return 'error';\n          }\n        }\n\n        // sets varibale for the end time of the event in front of where you want to insert the new event\n        const compEndAdd = (this.dayList[x - 1].endTime).replace(':', '');\n\n        // this checks if the actiity you want to add overlaps with current activities for other slots\n        if (startAdd >= compEndAdd && endAdd <= compStartAdd) {\n          return x;\n        }\n        return 'error';\n      }\n    }\n    // runs if item needs to be inserted at the end of the day\n\n    // sets varibale for the start time of the event you want to add ready for comparison\n    const startAdd2 = startTime[0] + startTime[1];\n\n    // sets variable for the end time of the last item in the day\n    const endAddExisting = this.dayList[this.dayList.length - 1].endTime.replace(':', '');\n\n    // checks if new activ starts after the old one finishes\n    if (startAdd2 >= endAddExisting) {\n      return this.dayList.length;\n    } else {\n      return 'error';\n    }\n\n  }\n\n  // adds to todo list if possible takes in times in ionic format\n  addToDo(activName: string,  StartTime: string, EndTime: string) {\n    // declarations\n    const adding = new DayItem(activName, StartTime, EndTime);\n    const pos = this.findPos(StartTime, EndTime);\n\n    // checks if there was an error in finding a slot for the new activity\n    if (pos === 'error') {\n      return 'error';\n    }\n\n    this.dayList.splice(pos, 0, adding);\n  }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: 'Oops',\n      message: 'That is not a valid activity',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  removeItem(item: DayItem) {\n    const index = this.dayList.findIndex(x => x === item);\n    console.log(index);\n    this.dayList.splice(index, 1);\n    console.log('ran');\n  }\n\n\n\n}\n\n\n"]}