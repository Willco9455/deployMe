{"version":3,"sources":["webpack:///src/app/Pages/add-activ/add-activ.page.html","webpack:///src/app/Pages/add-activ/add-activ-routing.module.ts","webpack:///src/app/Pages/add-activ/add-activ.module.ts","webpack:///src/app/Pages/add-activ/add-activ.page.scss","webpack:///src/app/Pages/add-activ/add-activ.page.ts","webpack:///src/app/Services/day.service.ts"],"names":["routes","path","component","AddActivPageRoutingModule","imports","forChild","exports","AddActivPageModule","declarations","AddActivPage","dayService","timeService","router","buttonDisabled","clearButton1","clearButton2","refresh","date","getDate","textInp","undefined","endDate","endTime","slice","search","endDateArry","split","indexOf","navigate","selector","template","DayService","alertController","dayList","time","startTime","length","x","compStartTime","startAdd","endAdd","compStartAdd","replace","compEndAdd","startAdd2","endAddExisting","activName","StartTime","EndTime","adding","pos","findPos","splice","create","header","message","buttons","alert","present","item","index","findIndex","console","log","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAJrC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,kBAAkB;AAAA;AAAA,O;;AAAlBA,wBAAkB,6DAT9B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,mFAJO,CADD;AAORI,oBAAY,EAAE,CAAC,4DAAD;AAPN,OAAT,CAS8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCUFE,YAAY;AAWvB,8BACUC,UADV,EAEUC,WAFV,EAGUC,MAHV,EAGwB;AAAA;;AAFd,eAAAF,UAAA,GAAAA,UAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAPV,eAAAC,cAAA,GAAiB,IAAjB;AACA,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,YAAA,GAAe,KAAf;AAMO,SAfgB,CAiBvB;;;AAjBuB;AAAA;AAAA,qCAkBZ,CACV,CAnBsB,CAqBvB;;AArBuB;AAAA;AAAA,6CAsBJ;AACjB,iBAAKC,OAAL;AACA,iBAAKC,IAAL,GAAY,KAAKN,WAAL,CAAiBO,OAAjB,EAAZ;AACD,WAzBsB,CA2BvB;;AA3BuB;AAAA;AAAA,4CA4BL;AAChB,iBAAKF,OAAL;AACD,WA9BsB,CAgCvB;;AAhCuB;AAAA;AAAA,oCAiCb;AACR,iBAAKG,OAAL,GAAeC,SAAf;AACA,iBAAKC,OAAL,GAAeD,SAAf;AACA,iBAAKE,OAAL,GAAeF,SAAf;AACA,iBAAKP,cAAL,GAAsB,IAAtB;AACD,WAtCsB,CAwCvB;;AAxCuB;AAAA;AAAA,oCAyCb;AACR;AACA,gBAAI,KAAKQ,OAAL,KAAiBD,SAArB,EAAgC;AAC9B,mBAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaE,KAAb,CAAmB,CAAnB,EAAsB,KAAKF,OAAL,CAAaG,MAAb,CAAoB,GAApB,CAAtB,CAAf;AACA,mBAAKC,WAAL,GAAmB,KAAKJ,OAAL,CAAaK,KAAb,CAAmB,GAAnB,CAAnB;AACD,aALO,CAMR;;;AACA,gBAAI,KAAKJ,OAAL,KAAiBF,SAArB,EAAgC;AAC9B,mBAAKE,OAAL,GAAe,KAAKA,OAAL,CAAaC,KAAb,CAAmB,KAAKD,OAAL,CAAaE,MAAb,CAAoB,GAApB,IAA2B,CAA9C,EAAiD,KAAKF,OAAL,CAAaK,OAAb,CAAqB,GAArB,EAA0B,KAAKL,OAAL,CAAaK,OAAb,CAAqB,GAArB,IAA4B,CAAtD,CAAjD,CAAf;AACD;;AACD,iBAAKf,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD,WApDsB,CAsDvB;;AAtDuB;AAAA;AAAA,0CAuDP;AACd,gBAAI,KAAKT,OAAL,KAAiB,EAArB,EAAyB;AACvB,mBAAKN,cAAL,GAAsB,IAAtB;AACD,aAFD,MAEO;AACL,mBAAKA,cAAL,GAAsB,KAAtB;AACD;AACF;AA7DsB;AAAA;AAAA,yCA+DR;AACb,gBAAI,KAAKQ,OAAL,KAAiBD,SAArB,EAAgC;AAC9B,mBAAKN,YAAL,GAAoB,IAApB;AACD,aAFD,MAEO;AACL,mBAAKA,YAAL,GAAoB,KAApB;AACD;AACF;AArEsB;AAAA;AAAA,yCAuER;AACb,gBAAI,KAAKQ,OAAL,KAAiBF,SAArB,EAAgC;AAC9B,mBAAKL,YAAL,GAAoB,IAApB;AACD,aAFD,MAEO;AACL,mBAAKA,YAAL,GAAoB,KAApB;AACD;AACF;AA7EsB;AAAA;AAAA,yCA+ER;AACb,iBAAKM,OAAL,GAAeD,SAAf;AACD;AAjFsB;AAAA;AAAA,yCAmFR;AACb,iBAAKE,OAAL,GAAeF,SAAf;AACD;AArFsB;;AAAA;AAAA,S;;;;gBARhB;;gBACA;;gBAFA;;;;AASIX,kBAAY,6DALxB,gEAAU;AACToB,gBAAQ,EAAE,eADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,0GAFS;;;;AAAA,OAAV,CAKwB,E,+EAYD,gE,EACC,yE,EACL,sD,EAdK,GAAZrB,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCHAsB,UAAU;AAErB,4BAAoBC,eAApB,EAAsD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AAEpB,eAAAC,OAAA,GAAqB,CACnB,IAAI,+DAAJ,CAAY,YAAZ,EAA0B,OAA1B,EAAmC,OAAnC,CADmB,EAEnB,IAAI,+DAAJ,CAAY,qBAAZ,EAAmC,OAAnC,EAA4C,OAA5C,CAFmB,EAGnB,IAAI,+DAAJ,CAAY,YAAZ,EAA0B,OAA1B,EAAmC,OAAnC,CAHmB,CAArB;AAFyD;;AAFpC;AAAA;AAAA,mCAWZ;AACP,sCAAW,KAAKA,OAAhB;AACD,WAboB,CAerB;;AAfqB;AAAA;AAAA,yCAgBNC,IAhBM,EAgBQ;AAC3BA,gBAAI,GAAGA,IAAI,CAACX,KAAL,CAAWW,IAAI,CAACV,MAAL,CAAY,GAAZ,IAAmB,CAA9B,EAAiCU,IAAI,CAACP,OAAL,CAAa,GAAb,EAAkBO,IAAI,CAACP,OAAL,CAAa,GAAb,IAAoB,CAAtC,CAAjC,CAAP;AACA,mBAAOO,IAAP;AACD,WAnBoB,CAqBrB;;AArBqB;AAAA;AAAA,kCAsBbC,SAtBa,EAsBGb,OAtBH,EAsBiB;AAEpC;AACA,gBAAI,KAAKW,OAAL,CAAaG,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,qBAAO,CAAP;AACD;;AAEDD,qBAAS,GAAGA,SAAS,CAACT,KAAV,CAAgB,GAAhB,CAAZ,CAPoC,CAOF;;AAClCJ,mBAAO,GAAGA,OAAO,CAACI,KAAR,CAAc,GAAd,CAAV,CARoC,CAQN;;AAE9B,gBAAIW,CAAJ;;AACA,iBAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKJ,OAAL,CAAaG,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;AAAE;AAE1C,kBAAMC,aAAa,GAAG,KAAKL,OAAL,CAAaI,CAAb,EAAgBF,SAAhB,CAA0BT,KAA1B,CAAgC,GAAhC,CAAtB;;AAEA,kBAAIY,aAAa,CAAC,CAAD,CAAb,KAAqBH,SAAS,CAAC,CAAD,CAAlC,EAAuC;AACrC,oBAAIG,aAAa,CAAC,CAAD,CAAb,KAAqBH,SAAS,CAAC,CAAD,CAAlC,EAAuC;AACrC;AACA,yBAAO,OAAP;AACD,iBAHD,MAGO,IAAIA,SAAS,CAAC,CAAD,CAAT,GAAeG,aAAa,CAAC,CAAD,CAAhC,EAAsC;AAAC;AAC5C;AAEA;AACA,sBAAMC,QAAQ,GAAGJ,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAAzC,CAJ2C,CAK3C;;AACA,sBAAMK,MAAM,GAAGlB,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAnC,CAN2C,CAO3C;;AACA,sBAAMmB,YAAY,GAAI,KAAKR,OAAL,CAAaI,CAAb,EAAgBF,SAAjB,CAA4BO,OAA5B,CAAoC,GAApC,EAAyC,EAAzC,CAArB,CAR2C,CAU3C;;AACA,sBAAIL,CAAC,KAAK,CAAV,EAAa;AACX,wBAAIG,MAAM,IAAIC,YAAd,EAA6B;AAC3B,6BAAOJ,CAAP;AACD,qBAFD,MAEO;AACL,6BAAO,OAAP;AACD;AACF,mBAjB0C,CAmB3C;;;AACA,sBAAMM,UAAU,GAAI,KAAKV,OAAL,CAAaI,CAAC,GAAG,CAAjB,EAAoBf,OAArB,CAA8BoB,OAA9B,CAAsC,GAAtC,EAA2C,EAA3C,CAAnB,CApB2C,CAsB3C;;AACA,sBAAIH,QAAQ,IAAII,UAAZ,IAA0BH,MAAM,IAAIC,YAAxC,EAAsD;AACpD,2BAAOJ,CAAP;AACD;;AACD,yBAAO,OAAP;AACC;AACJ,eAhCD,MAgCO,IAAIF,SAAS,CAAC,CAAD,CAAT,GAAeG,aAAa,CAAC,CAAD,CAAhC,EAAqC;AAC1C;AAEA;AACA;AAEA;AACA,oBAAMC,SAAQ,GAAGJ,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAAzC,CAP0C,CAQ1C;;;AACA,oBAAMK,OAAM,GAAGlB,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAnC,CAT0C,CAU1C;;;AACA,oBAAMmB,aAAY,GAAI,KAAKR,OAAL,CAAaI,CAAb,EAAgBF,SAAjB,CAA4BO,OAA5B,CAAoC,GAApC,EAAyC,EAAzC,CAArB,CAX0C,CAa1C;;;AACA,oBAAIL,CAAC,KAAK,CAAV,EAAa;AACX,sBAAIG,OAAM,IAAIC,aAAd,EAA6B;AAC3B,2BAAOJ,CAAP;AACD,mBAFD,MAEO;AACL,2BAAO,OAAP;AACD;AACF,iBApByC,CAsB1C;;;AACA,oBAAMM,WAAU,GAAI,KAAKV,OAAL,CAAaI,CAAC,GAAG,CAAjB,EAAoBf,OAArB,CAA8BoB,OAA9B,CAAsC,GAAtC,EAA2C,EAA3C,CAAnB,CAvB0C,CAyB1C;;;AACA,oBAAIH,SAAQ,IAAII,WAAZ,IAA0BH,OAAM,IAAIC,aAAxC,EAAsD;AACpD,yBAAOJ,CAAP;AACD;;AACD,uBAAO,OAAP;AACD;AACF,aA9EmC,CA+EpC;AAEA;;;AACA,gBAAMO,SAAS,GAAGT,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAA1C,CAlFoC,CAoFpC;;AACA,gBAAMU,cAAc,GAAG,KAAKZ,OAAL,CAAa,KAAKA,OAAL,CAAaG,MAAb,GAAsB,CAAnC,EAAsCd,OAAtC,CAA8CoB,OAA9C,CAAsD,GAAtD,EAA2D,EAA3D,CAAvB,CArFoC,CAuFpC;;AACA,gBAAIE,SAAS,IAAIC,cAAjB,EAAiC;AAC/B,qBAAO,KAAKZ,OAAL,CAAaG,MAApB;AACD,aAFD,MAEO;AACL,qBAAO,OAAP;AACD;AAEF,WApHoB,CAsHrB;;AAtHqB;AAAA;AAAA,kCAuHbU,SAvHa,EAuHOC,SAvHP,EAuH0BC,OAvH1B,EAuH2C;AAC9D;AACA,gBAAMC,MAAM,GAAG,IAAI,+DAAJ,CAAYH,SAAZ,EAAuBC,SAAvB,EAAkCC,OAAlC,CAAf;AACA,gBAAME,GAAG,GAAG,KAAKC,OAAL,CAAaJ,SAAb,EAAwBC,OAAxB,CAAZ,CAH8D,CAK9D;;AACA,gBAAIE,GAAG,KAAK,OAAZ,EAAqB;AACnB,qBAAO,OAAP;AACD;;AAED,iBAAKjB,OAAL,CAAamB,MAAb,CAAoBF,GAApB,EAAyB,CAAzB,EAA4BD,MAA5B;AACD;AAlIoB;AAAA;AAAA,yCAoIA;;;;;;;;AACL,6BAAM,KAAKjB,eAAL,CAAqBqB,MAArB,CAA4B;AAC9CC,8BAAM,EAAE,MADsC;AAE9CC,+BAAO,EAAE,8BAFqC;AAG9CC,+BAAO,EAAE,CAAC,IAAD;AAHqC,uBAA5B,CAAN;;;AAARC,2B;;AAMN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;AA5IoB;AAAA;AAAA,qCA8IVC,IA9IU,EA8IK;AACxB,gBAAMC,KAAK,GAAG,KAAK3B,OAAL,CAAa4B,SAAb,CAAuB,UAAAxB,CAAC;AAAA,qBAAIA,CAAC,KAAKsB,IAAV;AAAA,aAAxB,CAAd;AACAG,mBAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,iBAAK3B,OAAL,CAAamB,MAAb,CAAoBQ,KAApB,EAA2B,CAA3B;AACAE,mBAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AAnJoB;;AAAA;AAAA,S;;;;gBALd;;;;AAKIhC,gBAAU,6DAHtB,iEAAW;AACViC,kBAAU,EAAE;AADF,OAAX,CAGsB,E,+EAEgB,8D,EAFhB,GAAVjC,UAAU,CAAV","file":"default~Pages-add-activ-add-activ-module~day-view-day-view-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color='primary'>\\n    <ion-title>Add a New Activity</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Activity</ion-label>\\n    <ion-input [(ngModel)]=\\\"textInp\\\" (ionChange)=\\\"validActivInp()\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label >Competion Date</ion-label>\\n    <ion-datetime [(ngModel)]=\\\"endDate\\\" (ionChange)='button1Check()' displayFormat=\\\"D MMM YYYY\\\" [min]='date' placeholder=\\\"None\\\" ></ion-datetime>\\n    <div class=\\\"clear\\\">\\n      <ion-button *ngIf='clearButton1 === true' (click)='clearEndDate()' fill=\\\"clear\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n      </ion-button>\\n    </div>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label>Competion Time</ion-label>\\n    <ion-datetime displayFormat=\\\"H:mm\\\" (ionChange)='button2Check()' placeholder=\\\"None\\\" [(ngModel)]=\\\"endTime\\\"></ion-datetime>\\n    <div class=\\\"clear\\\">\\n      <ion-button *ngIf='clearButton2 === true' (click)='clearEndTime()' fill='clear'>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n      </ion-button>\\n    </div>\\n  </ion-item>\\n\\n  <ion-button (click)=\\\"clicked()\\\" (onChange)='validActivInp()' [disabled]='buttonDisabled' class=\\\"addButton\\\">\\n    Add\\n  </ion-button>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddActivPage } from './add-activ.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddActivPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddActivPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddActivPageRoutingModule } from './add-activ-routing.module';\n\nimport { AddActivPage } from './add-activ.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddActivPageRoutingModule\n  ],\n  declarations: [AddActivPage]\n})\nexport class AddActivPageModule {}\n","export default \"ion-button.addButton {\\n  margin-left: 10px;\\n  margin-top: 10px;\\n}\\n\\n.clear {\\n  z-index: 2;\\n  width: 30px;\\n}\\n\\n.clear ion-button {\\n  --padding-start:2px;\\n  --padding-end: 2px;\\n  --padding-top: 1.5px;\\n}\\n\\n.test {\\n  --padding-top: 0px;\\n  --padding-bottom: 0px;\\n}\\n\\n.test input {\\n  text-align: center;\\n}\\n\\n.ded {\\n  --inner-padding-bottom:0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUGFnZXMvYWRkLWFjdGl2L2FkZC1hY3Rpdi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtFQUNBLGdCQUFBO0FBQ0o7O0FBRUE7RUFDSSxVQUFBO0VBQ0EsV0FBQTtBQUNKOztBQUFJO0VBQ0ksbUJBQUE7RUFDQSxrQkFBQTtFQUNBLG9CQUFBO0FBRVI7O0FBRUE7RUFDSSxrQkFBQTtFQUNBLHFCQUFBO0FBQ0o7O0FBQUk7RUFDSSxrQkFBQTtBQUVSOztBQUVBO0VBQ0ksMEJBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL2FkZC1hY3Rpdi9hZGQtYWN0aXYucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWJ1dHRvbi5hZGRCdXR0b257XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLmNsZWFye1xuICAgIHotaW5kZXg6IDI7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgaW9uLWJ1dHRvbntcbiAgICAgICAgLS1wYWRkaW5nLXN0YXJ0OjJweDtcbiAgICAgICAgLS1wYWRkaW5nLWVuZDogMnB4O1xuICAgICAgICAtLXBhZGRpbmctdG9wOiAxLjVweDtcbiAgICB9XG59XG5cbi50ZXN0e1xuICAgIC0tcGFkZGluZy10b3A6IDBweDtcbiAgICAtLXBhZGRpbmctYm90dG9tOiAwcHg7XG4gICAgaW5wdXR7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG59XG5cbi5kZWR7XG4gICAgLS1pbm5lci1wYWRkaW5nLWJvdHRvbTowcHg7XG59ICBcblxuIl19 */\";","import { Component, OnInit, ModuleWithComponentFactories } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DayService } from '../../Services/day.service';\nimport { TimeService } from 'src/app/Services/time.service';\n\n@Component({\n  selector: 'app-add-activ',\n  templateUrl: './add-activ.page.html',\n  styleUrls: ['./add-activ.page.scss'],\n})\nexport class AddActivPage implements OnInit {\n\n  textInp: string;\n  endDate: string;\n  endDateArry: string [];\n  endTime: string;\n  date: string;\n  buttonDisabled = true;\n  clearButton1 = false;\n  clearButton2 = false;\n\n  constructor(\n    private dayService: DayService,\n    private timeService: TimeService,\n    private router: Router\n    ) { }\n\n  // runs of the first initialisation of the moduel;\n  ngOnInit() {\n  }\n\n  // runs when the page is bieng trasnitioned into;\n  ionViewWillEnter() {\n    this.refresh();\n    this.date = this.timeService.getDate();\n  }\n\n  // runs when the screen view is left;\n  ionViewDidLeave() {\n    this.refresh();\n  }\n\n  // this is run to reset all the fields to add a new activity;\n  refresh() {\n    this.textInp = undefined;\n    this.endDate = undefined;\n    this.endTime = undefined;\n    this.buttonDisabled = true;\n  }\n\n  // runs when the add activity button is pressed;\n  clicked() {\n    // checks for completion date;\n    if (this.endDate !== undefined) {\n      this.endDate = this.endDate.slice(0, this.endDate.search('T'));\n      this.endDateArry = this.endDate.split('-');\n    }\n    // chescks for completion time;\n    if (this.endTime !== undefined) {\n      this.endTime = this.endTime.slice(this.endTime.search('T') + 1, this.endTime.indexOf(':', this.endTime.indexOf(':') + 1));\n    }\n    this.router.navigate(['']);\n  }\n\n  // checks if there is a value in the activity input field and if not the add button cannot be pressed;\n  validActivInp() {\n    if (this.textInp === '') {\n      this.buttonDisabled = true;\n    } else {\n      this.buttonDisabled = false;\n    }\n  }\n\n  button1Check() {\n    if (this.endDate !== undefined) {\n      this.clearButton1 = true;\n    } else {\n      this.clearButton1 = false;\n    }\n  }\n\n  button2Check() {\n    if (this.endTime !== undefined) {\n      this.clearButton2 = true;\n    } else {\n      this.clearButton2 = false;\n    }\n  }\n\n  clearEndDate() {\n    this.endDate = undefined;\n  }\n\n  clearEndTime() {\n    this.endTime = undefined;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { DayItem, Action } from '../Pages/to-do/item.model';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DayService {\n\n  constructor(private alertController: AlertController) { }\n\n  dayList: DayItem[] = [\n    new DayItem('first test', '12:00', '13:00'),\n    new DayItem('trollolololoolololo', '13:23', '13:26'),\n    new DayItem('testing212', '15:00', '16:00')\n  ];\n\n\n  getDay() {// WORKS\n    return [...this.dayList];\n  }\n\n  // this converts the way ionic stores time(2020-06-02T16:00:47.314+01:00) to regular format used in findPos function\n  ionTimeConvert(time: string) {// WORKS\n    time = time.slice(time.search('T') + 1, time.indexOf(':', time.indexOf(':') + 1));\n    return time;\n  }\n\n  // function used to find the positon a new activity should go in based on its date, returns the position;\n  findPos(startTime: any, endTime: any) {// WORKS!!\n\n    // to check if the day is emty and if it is return 0 as positon\n    if (this.dayList.length === 0) {\n      return 0;\n    }\n\n    startTime = startTime.split(':'); // turns ionic time into array [HH,MM]\n    endTime = endTime.split(':'); // turns ionic time into array [HH,MM]\n\n    let x: number;\n    for (x = 0; x < this.dayList.length; x++) { // loops through the items currently in daylist array\n\n      const compStartTime = this.dayList[x].startTime.split(':');\n\n      if (compStartTime[0] === startTime[0]) {\n        if (compStartTime[1] === startTime[1]) {\n          // runs of the start time is the same as a activity that already exists\n          return 'error';\n        } else if (startTime[1] < compStartTime[1] ) {// elif to check if the activity can fit in the day\n          // runs when a slot is found\n\n          // sets varibale for the start time of the event you want to add eady for comparison\n          const startAdd = startTime[0] + startTime[1];\n          // sets varibale for the end time of the event you want to add eady for comparison\n          const endAdd = endTime[0] + endTime[1];\n          // sets varibale for the start time of the event in front of where you want to insert the new event\n          const compStartAdd = (this.dayList[x].startTime).replace(':', '');\n\n          // this if statment checks if times overlap for activities going into slot 0\n          if (x === 0) {\n            if (endAdd <= compStartAdd ) {\n              return x;\n            } else {\n              return 'error';\n            }\n          }\n\n          // sets varibale for the end time of the event in front of where you want to insert the new event\n          const compEndAdd = (this.dayList[x - 1].endTime).replace(':', '');\n\n          // this checks if the actiity you want to add overlaps with current activities for other slots\n          if (startAdd >= compEndAdd && endAdd <= compStartAdd) {\n            return x;\n          }\n          return 'error';\n          }\n      } else if (startTime[0] < compStartTime[0]) {\n        // runs when a slot has been found\n\n        // this section is the exact same as the previous both of them check if the new item's times-\n        // overlap with the already established activites in the list\n\n        // sets varibale for the start time of the event you want to add eady for comparison\n        const startAdd = startTime[0] + startTime[1];\n        // sets varibale for the end time of the event you want to add eady for comparison\n        const endAdd = endTime[0] + endTime[1];\n        // sets varibale for the start time of the event in front of where you want to insert the new event\n        const compStartAdd = (this.dayList[x].startTime).replace(':', '');\n\n        // this if statment checks if times overlap for activities going into slot 0\n        if (x === 0) {\n          if (endAdd <= compStartAdd ) {\n            return x;\n          } else {\n            return 'error';\n          }\n        }\n\n        // sets varibale for the end time of the event in front of where you want to insert the new event\n        const compEndAdd = (this.dayList[x - 1].endTime).replace(':', '');\n\n        // this checks if the actiity you want to add overlaps with current activities for other slots\n        if (startAdd >= compEndAdd && endAdd <= compStartAdd) {\n          return x;\n        }\n        return 'error';\n      }\n    }\n    // runs if item needs to be inserted at the end of the day\n\n    // sets varibale for the start time of the event you want to add ready for comparison\n    const startAdd2 = startTime[0] + startTime[1];\n\n    // sets variable for the end time of the last item in the day\n    const endAddExisting = this.dayList[this.dayList.length - 1].endTime.replace(':', '');\n\n    // checks if new activ starts after the old one finishes\n    if (startAdd2 >= endAddExisting) {\n      return this.dayList.length;\n    } else {\n      return 'error';\n    }\n\n  }\n\n  // adds to todo list if possible takes in times in ionic format\n  addToDo(activName: string,  StartTime: string, EndTime: string) {\n    // declarations\n    const adding = new DayItem(activName, StartTime, EndTime);\n    const pos = this.findPos(StartTime, EndTime);\n\n    // checks if there was an error in finding a slot for the new activity\n    if (pos === 'error') {\n      return 'error';\n    }\n\n    this.dayList.splice(pos, 0, adding);\n  }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: 'Oops',\n      message: 'That is not a valid activity',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  removeItem(item: DayItem) {\n    const index = this.dayList.findIndex(x => x === item);\n    console.log(index);\n    this.dayList.splice(index, 1);\n    console.log('ran');\n  }\n\n\n\n}\n\n\n"]}