{"version":3,"sources":["./src/app/Pages/to-do/actions/actions.page.html","./src/app/Pages/to-do/actions/actions-routing.module.ts","./src/app/Pages/to-do/actions/actions.module.ts","./src/app/Pages/to-do/actions/actions.page.scss","./src/app/Pages/to-do/actions/actions.page.ts"],"names":[],"mappings":"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","file":"actions-actions-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color='primary'>\\n    <ion-title>Actions</ion-title>\\n    <ion-buttons *ngIf=\\\"this.srtBy === 'custom'\\\" slot=\\\"end\\\">\\n      <ion-button (click)='editAct()'>Move items</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-toolbar mode='ios'>\\n    <ion-segment (ionChange)='dayRefresh()' style=\\\"width: 90%;\\\" [(ngModel)]='selected' value=\\\"day\\\">\\n\\n      <ion-segment-button value=\\\"day\\\" layout=\\\"icon-start\\\">\\n        <ion-icon name=\\\"today-outline\\\"></ion-icon>\\n        <ion-label>Day</ion-label> \\n      </ion-segment-button>\\n\\n      <ion-segment-button value=\\\"week\\\" layout='icon-start'>\\n        <ion-icon name=\\\"calendar-outline\\\"></ion-icon>\\n        <ion-label>Week</ion-label>\\n      </ion-segment-button>\\n      \\n      <ion-segment-button value=\\\"all\\\" layout='icon-start'>\\n        <ion-icon name=\\\"list-outline\\\"></ion-icon>\\n        <ion-label>All</ion-label>\\n      </ion-segment-button>\\n      \\n    </ion-segment>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"presentPopover($event)\\\">\\n        <!--<ion-label>Sort</ion-label>-->\\n        <ion-icon background='primary' size='medium' name=\\\"swap-vertical-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n\\n<!-- THIS PART IS SHOWN WHEN NOT SORTING BY CATAGORY -->\\n  <ion-reorder-group *ngIf=\\\"this.srtBy !== 'catagory'; else mainElse\\\" (ionItemReorder)='doReorder($event)' [disabled]='!edit'>\\n    <div *ngFor=\\\"let action of actions\\\">\\n        <!-- this section is if the the user has selected to edit the order of there actions-->\\n      <ion-reorder *ngIf=\\\"edit === true; else elseBlock\\\">\\n        <ion-item>\\n          <ion-label>\\n            <h6>{{action.name}}</h6>\\n            <p>Catagory - {{action.catagory}}</p>\\n            <p>Deadline - {{this.dateToDisplay(action.deadline)}}</p>\\n          </ion-label>\\n          <ion-icon name=\\\"reorder-three-outline\\\"></ion-icon>\\n        </ion-item>\\n      </ion-reorder>\\n\\n      <ng-template #elseBlock>\\n        <ion-item-sliding>\\n          <ion-item lines='full' class=\\\"action\\\">\\n            <ion-label>\\n              <h6>{{action.name}}</h6>\\n              <p>Catagory - {{action.catagory}}</p>\\n              <p>Deadline - {{this.dateToDisplay(action.deadline)}}</p>\\n            </ion-label>\\n  \\n            <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"action.completed\\\"></ion-checkbox>\\n          </ion-item>\\n  \\n          <ion-item-options>\\n            <ion-item-option (click)='showModal(action)' color=\\\"secondary\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"create-outline\\\"></ion-icon>\\n            </ion-item-option>\\n\\n            <ion-item-option (click)='deleteAction(action)' color=\\\"danger\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n            </ion-item-option>\\n          </ion-item-options>\\n        </ion-item-sliding>\\n      </ng-template>\\n\\n    </div>\\n  </ion-reorder-group>\\n\\n<!-- THIS PART IS SHOWN WHEN YOU ARE SORTING BY CATAGORY -->\\n  <ng-template #mainElse>\\n    <div *ngFor=\\\"let cat of this.catagories\\\">\\n\\n      <ion-list *ngIf=\\\"checkCatFull(cat)\\\">\\n        \\n        <ion-list-header>\\n          <ion-label>{{ cat }}</ion-label>\\n          <ion-button (click)=\\\"reorderCatFun(cat)\\\" >Order</ion-button>\\n        </ion-list-header>\\n\\n          \\n        <ion-reorder-group (ionItemReorder)='moveCatPos(cat, $event)' [disabled]='!checkRe(cat)'>\\n          <div *ngFor=\\\"let action of actions\\\">\\n            <div *ngIf=\\\"action.catagory === cat\\\">\\n              <ion-reorder *ngIf=\\\"checkRe(cat); else notReorder\\\">\\n                <ion-item >\\n                  <ion-label>\\n                    <h6>{{action.name}}</h6>\\n                    <p>Deadline - {{this.dateToDisplay(action.deadline)}}</p>\\n                  </ion-label>\\n                  <ion-icon name=\\\"reorder-three-outline\\\"></ion-icon>\\n                </ion-item>\\n              </ion-reorder>\\n            </div>\\n          \\n            \\n            <ng-template #notReorder>\\n              <ion-item-sliding *ngIf=\\\"action.catagory === cat\\\">\\n                <ion-item lines='full' class=\\\"action\\\">\\n                  <ion-label>\\n                    <h6>{{action.name}}</h6>\\n                    <p>Deadline - {{this.dateToDisplay(action.deadline)}}</p>\\n                  </ion-label>\\n                  \\n                  <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"action.completed\\\"></ion-checkbox>\\n                </ion-item>\\n                \\n                <ion-item-options>\\n                  <ion-item-option (click)='showModal(action)' color=\\\"secondary\\\">\\n                    <ion-icon slot=\\\"icon-only\\\" name=\\\"create-outline\\\"></ion-icon>\\n                  </ion-item-option>\\n                  \\n                  <ion-item-option (click)='deleteAction(action)' color=\\\"danger\\\">\\n                    <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n                  </ion-item-option>\\n                </ion-item-options>\\n                \\n              </ion-item-sliding>\\n            </ng-template>\\n          \\n          </div>\\n        </ion-reorder-group>\\n      </ion-list>\\n\\n    </div>\\n    </ng-template>\\n\\n    \\n  <!--This creates a square so that the button does not cover important infomation-->\\n  <div style=\\\"height: 80px\\\"></div>\\n  <!--Button to add a new action-->\\n  <ion-fab (click)='showModal(\\\"new\\\")' vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button>\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ActionsPage } from './actions.page';\nimport { ModalController } from '@ionic/angular';\nimport { AddModalPage } from '../../add-modal/add-modal.page';\nimport { AddActionPageModule } from '../../add-action/add-action.module';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ActionsPage\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ActionsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ActionsPageRoutingModule } from './actions-routing.module';\n\nimport { ActionsPage } from './actions.page';\nimport { AddActionPageModule } from '../../add-action/add-action.module';\nimport { PopOverPageModule } from '../../pop-over/pop-over.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ActionsPageRoutingModule,\n    AddActionPageModule,\n    PopOverPageModule\n  ],\n  declarations: [ActionsPage]\n})\nexport class ActionsPageModule {}\n","export default \".addButton {\\n  bottom: 0;\\n  right: 0;\\n  position: fixed;\\n  z-index: 10;\\n  margin: 0px 10px 10px 10px;\\n  --border-radius: 500px;\\n  --padding-end: 0px;\\n  --padding-start: 0px;\\n  height: 50px;\\n  width: 60px;\\n}\\n.addButton ion-icon {\\n  font-size: larger;\\n}\\nion-list-header {\\n  text-transform: capitalize;\\n  font-weight: bolder;\\n  font-size: larger;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUGFnZXMvdG8tZG8vYWN0aW9ucy9hY3Rpb25zLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLFNBQUE7RUFDQSxRQUFBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7RUFDQSwwQkFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxvQkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FBREo7QUFFSTtFQUNJLGlCQUFBO0FBQVI7QUFJQTtFQUNJLDBCQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtBQURKIiwiZmlsZSI6InNyYy9hcHAvUGFnZXMvdG8tZG8vYWN0aW9ucy9hY3Rpb25zLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG4uYWRkQnV0dG9ue1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogMDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogMTA7XG4gICAgbWFyZ2luOiAwcHggMTBweCAxMHB4IDEwcHg7XG4gICAgLS1ib3JkZXItcmFkaXVzOiA1MDBweDtcbiAgICAtLXBhZGRpbmctZW5kOiAwcHg7XG4gICAgLS1wYWRkaW5nLXN0YXJ0OiAwcHg7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICAgIHdpZHRoOiA2MHB4O1xuICAgIGlvbi1pY29uIHtcbiAgICAgICAgZm9udC1zaXplOiBsYXJnZXI7XG4gICAgfSBcbn1cblxuaW9uLWxpc3QtaGVhZGVye1xuICAgIHRleHQtdHJhbnNmb3JtOmNhcGl0YWxpemU7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgICBmb250LXNpemU6IGxhcmdlcjtcbn1cblxuIl19 */\";","import { Component, OnInit} from '@angular/core';\n\nimport { Action } from '../item.model';\nimport { ModalController, PopoverController} from '@ionic/angular';\nimport { AddActionPage } from '../../add-action/add-action.page';\nimport { ActionsService } from 'src/app/Services/actions.service';\nimport { PopOverPage } from '../../pop-over/pop-over.page';\nimport { TimeService } from 'src/app/Services/time.service';\nimport { __core_private_testing_placeholder__ } from '@angular/core/testing';\n\n\n@Component({\n  selector: 'app-actions',\n  templateUrl: './actions.page.html',\n  styleUrls: ['./actions.page.scss'],\n})\nexport class ActionsPage implements OnInit {\n\n  actions: Action [];\n  properties: object;\n  selected = this.actionsService.getSelecView();\n  srtBy: string;\n  catagories = this.actionsService.catagories;\n\n  edit = false;\n  reorderCat: boolean[] = [];\n\n  constructor(\n    private modalCtrl: ModalController,\n    private actionsService: ActionsService,\n    private popoverController: PopoverController,\n    private timeService: TimeService,\n    ) { }\n\n  ngOnInit() {\n    this.dayRefresh();\n\n  // creates the reorderCat array full of falses for how many catagories there are used to reorder catagories\n    for (let i = 0; i < this.catagories.length; i++) {\n      this.reorderCat[i] = false;\n    }\n  }\n\n  ionViewWillEnter() {\n    this.dayRefresh();\n  }\n\n  // essentioally resfreshes the page\n  dayRefresh() {\n    this.actionsService.setSelecView(this.selected);\n    this.srtBy = this.actionsService.getSrt();\n    this.actionsService.updateCurrent();\n    this.actions = this.actionsService.getActions();\n  }\n\n\n  // the code to pop up the add modal when the add button is pressed\n  async showModal(passed: any) {\n    // this if else sets the data before going into the modal depending on if it is an edit or not\n    if (passed === 'new') {\n      this.properties = {\n        name: undefined,\n        deadline: undefined,\n        catagory: 'None',\n        edit: false\n      };\n    } else {\n      console.log('deadline', passed.deadline);\n      this.properties = {\n        name: passed.name,\n        deadline: passed.deadline,\n        catagory: passed.catagory,\n        edit: true,\n        itemEditing: passed\n      };\n    }\n    const modal = await this.modalCtrl.create({\n      component: AddActionPage,\n      cssClass: 'add-modal-class',\n      swipeToClose: true,\n      backdropDismiss: true,\n      componentProps: this.properties\n    });\n\n    modal.onDidDismiss().then((dataReturnded) => {\n      this.dayRefresh();\n    });\n\n    return await modal.present();\n  }\n\n  // code to show the popover to select how you want to sort the actions\n  async presentPopover(ev: any) {\n    const popover = await this.popoverController.create({\n      component: PopOverPage,\n      cssClass: 'my-custom-class',\n      event: ev,\n      translucent: true\n    });\n\n    const popOpn = window.setInterval(() => {\n      this.actionsService.updateCurrent();\n      this.dayRefresh();\n    }, 100);\n\n    popover.onDidDismiss().then((dataReturnded) => {\n      clearInterval(popOpn);\n      this.srtBy = this.actionsService.getSrt();\n    });\n\n    return await popover.present();\n  }\n\n  // function that deleltes the action you pass in from thw the actions array\n  deleteAction(action: Action ) {\n    this.actionsService.deleteAction(action);\n    this.dayRefresh();\n  }\n\n  doReorder(ev: any) {\n    // The `from` and `to` properties contain the index of the item\n    // when the drag started and ended, respectively\n    this.actionsService.moveAction(ev.detail.from, ev.detail.to);\n\n    // Finish the reorder and position the item in the DOM based on\n    // where the gesture ended. This method can also be called directly\n    // by the reorder group\n    ev.detail.complete();\n  }\n\n  editAct() {\n    this.edit = !this.edit;\n    console.log(this.edit);\n  }\n\n//////////////// THIS STUFF IS FOR REORDING AND PRIORITSING WHEN IN THE CATAGORY VIEW ////////////////////////////\n\n  // runs when the reorder button is pressed for a catagory\n  reorderCatFun(cata: string) {\n    const pos = this.catagories.indexOf(cata);\n    this.reorderCat[pos] = !this.reorderCat[pos];\n  }\n\n  // checks wehter the catagory should be in the reorder state or not\n  checkRe(cata: string) {\n    const pos = this.catagories.indexOf(cata);\n    return this.reorderCat[pos];\n  }\n\n\n  moveCatPos(cata: string, ev: any) {\n    // The `from` and `to` properties contain the index of the item\n    // when the drag started and ended, respectively\n\n    this.actionsService.moveCatagory(cata, ev.detail.from, ev.detail.to);\n\n    // Finish the reorder and position the item in the DOM based on\n    // where the gesture ended. This method can also be called directly\n    // by the reorder group\n    ev.detail.complete();\n    this.dayRefresh();\n  }\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  dateToDay(date: string) {\n    return this.timeService.dateToDay(date);\n  }\n\n  checkCatFull(cat: string) {\n    const filtered = this.actions.filter(x => {\n      return x.catagory === cat;\n    });\n    return (filtered.length > 0);\n  }\n\n  dateToDisplay(date: string) {\n    return (this.timeService.dateToDisplay(date));\n  }\n\n}\n"],"sourceRoot":"webpack:///"}