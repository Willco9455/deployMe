{"version":3,"sources":["webpack:///src/app/Pages/to-do/day-view/day-view.page.html","webpack:///src/app/Pages/to-do/day-view/day-view-routing.module.ts","webpack:///src/app/Pages/to-do/day-view/day-view.module.ts","webpack:///src/app/Pages/to-do/day-view/day-view.page.scss","webpack:///src/app/Pages/to-do/day-view/day-view.page.ts"],"names":["routes","path","component","DayViewPageRoutingModule","imports","forChild","exports","DayViewPageModule","declarations","DayViewPage","dayService","modalCtrl","name","addDisabled","endTimeInpDis","reloadDay","adding","day","getDay","ionV","undefined","ionTimeConvert","create","cssClass","swipeToClose","backdropDismiss","modal","onDidDismiss","then","dataReturnded","present","item","removeItem","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,wBAAwB;AAAA;AAAA,O;;AAAxBA,8BAAwB,6DAJpC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIoC,GAAxBH,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOAI,iBAAiB;AAAA;AAAA,O;;AAAjBA,uBAAiB,6DAX7B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,iFAJO,EAKP,2FALO,EAMP,8EANO,CADD;AASRI,oBAAY,EAAE,CAAC,0DAAD;AATN,OAAT,CAW6B,GAAjBD,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACvBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCeFE,WAAW;AAUtB,6BACUC,UADV,EAEUC,SAFV,EAEoC;AAAA;;AAD1B,eAAAD,UAAA,GAAAA,UAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AARV,eAAAC,IAAA,GAAO,EAAP;AAGA,eAAAC,WAAA,GAAc,IAAd;AACA,eAAAC,aAAA,GAAgB,IAAhB;AAKO;;AAbe;AAAA;AAAA,qCAeX,CACV;AAhBqB;AAAA;AAAA,6CAkBH;AAEjB;AACA,iBAAKC,SAAL,GAHiB,CAKjB;;AACA,iBAAKC,MAAL,GAAc,KAAd;AACD;AAzBqB;AAAA;AAAA,sCA2BV;AACV,iBAAKC,GAAL,GAAW,KAAKP,UAAL,CAAgBQ,MAAhB,EAAX;AACD,WA7BqB,CAgCtB;;AAhCsB;AAAA;AAAA,qCAiCXC,IAjCW,EAiCA;AACpB,gBAAIA,IAAI,KAAKC,SAAb,EAAwB;AACtB,qBAAO,KAAKV,UAAL,CAAgBW,cAAhB,CAA+BF,IAA/B,CAAP;AACD,aAFD,MAEO;AACL,qBAAO,OAAP;AACD;AACF,WAvCqB,CAyCtB;;AAzCsB;AAAA;AAAA,sCA0CJ;;;;;;;;;;AACF,6BAAM,KAAKR,SAAL,CAAeW,MAAf,CAAsB;AACxCpB,iCAAS,EAAE,sEAD6B;AAExCqB,gCAAQ,EAAE,iBAF8B;AAGxCC,oCAAY,EAAE,IAH0B;AAIxCC,uCAAe,EAAE;AAJuB,uBAAtB,CAAN;;;AAARC,2B;AAONA,2BAAK,CAACC,YAAN,GAAqBC,IAArB,CAA0B,UAACC,aAAD,EAAmB;AAC3C,6BAAI,CAACd,SAAL;AACD,uBAFD;;AAIO,6BAAMW,KAAK,CAACI,OAAN,EAAN;;;;;;;;;;;;AACR;AAvDqB;AAAA;AAAA,iCAyDfC,IAzDe,EAyDA;AACpB,iBAAKrB,UAAL,CAAgBsB,UAAhB,CAA2BD,IAA3B;AACA,iBAAKhB,SAAL;AACD;AA5DqB;;AAAA;AAAA,S;;;;gBAZf;;gBAEA;;;;AAUIN,iBAAW,6DALvB,gEAAU;AACTwB,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,8GAFS;;;;AAAA,OAAV,CAKuB,E,+EAWA,uE,EACD,8D,EAZC,GAAXzB,WAAW,CAAX","file":"day-view-day-view-module-es5.js","sourcesContent":["export default \"<ion-toolbar color='primary'>\\n  <ion-title>Day Schedule</ion-title>\\n</ion-toolbar>\\n\\n<ion-content>\\n  <ion-list>\\n    <div *ngFor='let item of day'>\\n      <ion-item-sliding >\\n        <ion-item>\\n          <ion-label>{{ item.name }}</ion-label>\\n          {{ item.startTime}} - {{item.endTime}}\\n        </ion-item>\\n\\n        <ion-item-options>\\n          <ion-item-option (click)='rmItem(item)' color=\\\"danger\\\">\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n          </ion-item-option>\\n        </ion-item-options>\\n      </ion-item-sliding>\\n    </div>\\n  </ion-list>\\n\\n\\n  <!--This creates a square so that the button does not cover important infomation-->\\n  <div style=\\\"height: 80px\\\"></div>\\n  <!--Button to add a new action-->\\n  <ion-fab (click)=\\\"showModal()\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button>\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DayViewPage } from './day-view.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DayViewPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DayViewPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DayViewPageRoutingModule } from './day-view-routing.module';\n\nimport { DayViewPage } from './day-view.page';\nimport { AddActivPageModule } from 'src/app/Pages/add-activ/add-activ.module';\nimport { AddModalPageModule } from '../../add-modal/add-modal.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DayViewPageRoutingModule,\n    AddActivPageModule,\n    AddModalPageModule\n  ],\n  declarations: [DayViewPage]\n})\nexport class DayViewPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL3RvLWRvL2RheS12aWV3L2RheS12aWV3LnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\n\nimport { DayService } from 'src/app/Services/day.service';\n\nimport { ModalController } from '@ionic/angular';\nimport { AddModalPage } from '../../add-modal/add-modal.page';\nimport { DayItem } from '../item.model';\n\n\n@Component({\n  selector: 'app-day-view',\n  templateUrl: './day-view.page.html',\n  styleUrls: ['./day-view.page.scss'],\n})\nexport class DayViewPage implements OnInit {\n\n  day: any;\n  adding: boolean;\n  name = '';\n  startTime: string;\n  endTime: string;\n  addDisabled = true;\n  endTimeInpDis = true;\n\n  constructor(\n    private dayService: DayService,\n    private modalCtrl: ModalController\n    ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n\n    // fetches the list activities for today\n    this.reloadDay();\n\n    // sets adding variable to false by default\n    this.adding = false;\n  }\n\n  reloadDay() {\n    this.day = this.dayService.getDay();\n  }\n\n\n  // this function is used to convert to a normal data format and is used to se minimum time for endtime input\n  getRegTime(ionV: any)  {\n    if (ionV !== undefined) {\n      return this.dayService.ionTimeConvert(ionV);\n    } else {\n      return '00:00';\n    }\n  }\n\n  // this is the code for connecting to the adding modal\n  async showModal() {\n    const modal = await this.modalCtrl.create({\n      component: AddModalPage,\n      cssClass: 'add-modal-class',\n      swipeToClose: true,\n      backdropDismiss: true\n    });\n\n    modal.onDidDismiss().then((dataReturnded) => {\n      this.reloadDay();\n    });\n\n    return await modal.present();\n  }\n\n  rmItem(item: DayItem) {\n    this.dayService.removeItem(item);\n    this.reloadDay();\n  }\n\n}\n"]}